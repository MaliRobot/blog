# Generated by Django 2.2.13 on 2020-11-16 01:30

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import meta.models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('lead', models.CharField(max_length=255)),
                ('text', ckeditor.fields.RichTextField()),
                ('public', models.BooleanField()),
                ('language', models.CharField(default='eng', max_length=3)),
                ('image', models.ImageField(blank=True, default=None, upload_to='static/images/')),
                ('date_published', models.DateTimeField(verbose_name='date published')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'db_table': 'posts',
            },
            bases=(meta.models.ModelMeta, models.Model),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('text', models.TextField()),
                ('author', models.CharField(max_length=255)),
                ('public', models.BooleanField(default=True)),
                ('date_posted', models.DateTimeField(verbose_name='date posted')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.SET_NULL, related_name='comments', to='posts.Post')),
            ],
            options={
                'db_table': 'comments',
            },
        ),
    ]
